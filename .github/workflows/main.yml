name: build

on:
  push:
    branches:
      - main

jobs:
  build:
    uses: ./.github/workflows/_build.yml

  deploy_infrastructure:
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure
    permissions:
      id-token: write
      contents: read
    steps:
      # setup
      - name: checkout
        uses: actions/checkout@v3
      - name: setup node
        uses: ./.github/actions/setup-node/action.yml
        with:
          working-directory: infrastructure
      - name: setup golang
        uses: ./.github/actions/setup-go/action.yml
        with:
          working-directory: infrastructure
      - name: setup terraform
        uses: ./.github/actions/setup-terraform/action.yml
      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      # deploy
      - name: download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact
          path: backend/dist
      - name: apply
        env:
          CATS_API_KEY: ${{ secrets.CATS_API_KEY }}
        run: yarn apply:auto-approve

  deploy_frontend:
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    permissions:
      id-token: write
      contents: read
    steps:
      # setup
      - name: checkout
        uses: actions/checkout@v3
      - name: setup golang
        uses: ./.github/actions/setup-go/action.yml
        with:
          working-directory: frontend
      - name: setup go-task
        uses: arduino/setup-task@v1
      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      # deploy
      - name: download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: frontend/dist
      - name: deploy
        run: task deploy-only
